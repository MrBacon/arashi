<?xml version="1.0" encoding="utf-8" ?> 
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2">

   <!-- DefaultUserService 
        ============================= -->
   <query name="GetUserByEmailAndPassword">
      <![CDATA[
      from User u 
      where u.Site = :site 
        and u.IsLogicallyDeleted = 0 
        and u.Password = :password 
        and u.Email = :email
      ]]>
   </query>

   <query name="CountAllUsersForAllSites">
      <![CDATA[
      select count(u) 
      from User u 
      where u.IsLogicallyDeleted = 0
      ]]>
   </query>

   <query name="CountAllUsers">
      <![CDATA[
      select count(u) 
      from User u 
      where u.Site = :site 
        and u.IsLogicallyDeleted = 0
      ]]>
   </query>

   <query name="CountOtherUsersBySiteAndEmail">
      <![CDATA[
      select count(u) 
      from User u 
      where u.Site = :site 
        and u.Email = :email 
        and u.UserId <> :id
        and u.IsLogicallyDeleted = 0
      ]]>
   </query>

   <query name="CountOtherUsersBySiteAndDisplayName">
      <![CDATA[
      select count(u) 
      from User u 
      where u.Site = :site 
        and u.DisplayName = :name 
        and u.UserId <> :id
        and u.IsLogicallyDeleted = 0
      ]]>
   </query>

   <query name="GetUserById">
      <![CDATA[
      from User 
      where UserId = :userid
      ]]>
   </query>

   <!-- Commented: this queries give problem in ANTLR parser
   <query name="GetAllRights">
      <![CDATA[
      from Right 
      order by Name
      ]]>
   </query>

   <query name="GetRightsByIds">
      <![CDATA[
      from Right 
      where Id in (:ids)
      ]]>
   </query>-->



   <!-- SiteService 
        ============================= -->
   <query name="FindAll">
      <![CDATA[
      from Site s
      order by s.Name
      ]]>
   </query>

   <query name="GetSiteById">
      <![CDATA[
      from Site s
      inner join fetch s.Hosts
      where s.SiteId = :siteid
      ]]>
   </query>

   <query name="GetSiteByHostName">
      <![CDATA[
      from Site s 
         join fetch s.Hosts h 
      where h.HostName = :host
      ]]>
   </query>

   <query name="GetSiteHostsBySite">
      <![CDATA[
      from SiteHost a 
      where a.Site = :site 
      order by a.IsDefault DESC, HostName ASC
      ]]>
   </query>

   <query name="GetSiteHostByHostName">
      <![CDATA[
      from SiteHost 
      where HostName = :host
      ]]>
   </query>

   <query name="GetThemes">
      <![CDATA[
      from Theme
      ]]>
   </query>

   <query name="GetTrackingInfoForUsersOnline">
      <![CDATA[
      from TrackingInfo 
      where TrackingDate > :lastActivityDate 
      order by TrackingDate desc
      ]]>
   </query>

   <!-- SiteOption
        ============================= 
   <query name="GetAllSiteOptionsBySite">
      <![CDATA[
      from SiteOption 
      where Site = :site
      ]]>
   </query>

   <query name="FindSiteOptionBySiteAndName">
      <![CDATA[
      from SiteOption 
      where Site = :site
        and Name = :name
      ]]>
   </query>
   -->
   

   <!-- ThemeService
        ============================= -->
   <!--<query name="ThemeService_FindBySite">
      <![CDATA[
      from Theme t 
      where t.Site = :site 
      ]]>
   </query>-->

   <query name="ThemeService_GetById">
      <![CDATA[
      from Theme t 
      where t.ThemeId = :id
      ]]>
   </query>


   <query name="ThemeService_GetAll">
      <![CDATA[
      from Theme t 
      order by t.ThemeId
      ]]>
   </query>

   <!-- ContentItem
        ============================= -->
   <!--<query name="GetStatsBySite_ContentItems">
      <![CDATA[
      select count(c.Id), c.WorkflowStatus 
      from ContentItem c 
      where c.Site = :site 
      group by c.WorkflowStatus
      ]]>
   </query>-->

   <query name="GetStatsBySite_Comments">
      <![CDATA[
      select count(c.CommentId), c.Status 
      from Comment c 
         join c.ContentItem ci 
      where ci.Site = :site 
        and ci.IsLogicallyDeleted = 0
      group by c.Status
      ]]>
   </query>

   <query name="GetStatsBySite_Categories">
      <![CDATA[
      select count(CategoryId) 
      from Category where Site = :site
      ]]>
   </query>

   <query name="GetStatsBySite_Tags">
      <![CDATA[
      select count(TagId) 
      from Tag where Site = :site
      ]]>
   </query>


   <!-- Post
        ============================= -->
   <query name="GetStatsBySite_Posts">
      <![CDATA[
      select count(c.Id), c.WorkflowStatus 
      from Post c 
      where c.Site = :site 
        and c.IsLogicallyDeleted = 0
      group by c.WorkflowStatus
      ]]>
   </query>        
        
   <query name="GetRecentPosts">
      <![CDATA[
      from Post p
      where p.Id in (
        select p2.Id
        from Post p2
           left join p2.Comments c
        where p2.Site = :site
          and p2.WorkflowStatus = :status
          and p2.PublishedDate <= :date
          and p2.IsLogicallyDeleted = 0
        group by p2.Id
      )
      ]]>
   </query>

   <query name="GetPostCalendarForPublishedBySite">
      <![CDATA[
      select YEAR(c.PublishedDate), 
             MONTH(c.PublishedDate), 
             DAY(c.PublishedDate), 
             count(c.Id) 
      from Post c 
      where c.PublishedDate <= :now
        and c.Site = :site
        and c.IsLogicallyDeleted = 0
      group by YEAR(c.PublishedDate), 
             MONTH(c.PublishedDate), 
             DAY(c.PublishedDate)
      order by YEAR(c.PublishedDate) desc, 
             MONTH(c.PublishedDate) desc, 
             DAY(c.PublishedDate) desc
      ]]>
   </query>


   <!-- Page
        ============================= -->
   <query name="GetStatsBySite_Pages">
      <![CDATA[
      select count(c.Id), c.WorkflowStatus 
      from Page c 
      where c.Site = :site
        and c.IsLogicallyDeleted = 0
      group by c.WorkflowStatus
      ]]>
   </query>

   <query name="FindAllPagesBySite">
      <![CDATA[
      from Page 
      where Site = :site
        and WorkflowStatus = :status
        and PublishedDate <= :date
        and IsLogicallyDeleted = 0
      ]]>
   </query>


   <!-- Category
        ============================= -->
   <query name="GetAllRootCategories">
      <![CDATA[
      from Arashi.Core.Domain.Category c 
      where c.Site = :site 
        and c.ParentCategory is null 
      order by c.Path asc
      ]]>
   </query>
   
   <query name="GetCategoryBySiteAndFriendlyName">
      <![CDATA[
      from Arashi.Core.Domain.Category c 
      where c.Site = :site 
        and c.FriendlyName = :name
      ]]>
   </query>
   
   <query name="GetAllCategoriesBySite">
      <![CDATA[
      from Arashi.Core.Domain.Category c 
      where c.Site = :site 
      order by c.Path asc
      ]]>
   </query>


   <!-- Tag
        ============================= -->
   <query name="GetTagBySiteAndFriendlyName">
      <![CDATA[
      from Arashi.Core.Domain.Tag c 
      where c.Site = :site 
        and c.FriendlyName = :name
      ]]>
   </query>

   <query name="GetTagCloud">
      <![CDATA[
      select t.TagId, t.Name, count(t)
      from Tag t 
         join t.ContentItems tc
      where t.Site = :site
        and tc.IsLogicallyDeleted = 0
      group by t.TagId, t.Name
      ]]>
   </query>

   <query name="GetAllTagsBySite">
      <![CDATA[
      from Arashi.Core.Domain.Tag t 
      where t.Site = :site 
      order by t.Name asc
      ]]>
   </query>
   
   
   <!-- Comment
        ============================= -->
   <query name="IsFirstPing">
      <![CDATA[
      select count(c) 
      from Comment c 
      where c.ContentItem = :item
        and c.Type = :type
        and c.Url = :url
        and c.ContentItem.IsLogicallyDeleted = 0
      ]]>
   </query>

   <query name="GetRecentComments">
      <![CDATA[
      select c
      from Comment c 
      join c.ContentItem ci 
      where ci.Site = :site 
        and ci.WorkflowStatus = :status 
        and ci.PublishedDate <= :date 
        and c.Type = :type
        and c.Status = :commentstatus
        and ci.IsLogicallyDeleted = 0
       order by c.CreatedDate DESC
      ]]>
   </query>


   <!-- Widget
        ============================= -->
   <query name="GetWidgetsBySite">
      <![CDATA[
      from Widget w 
      where w.Site = :site
      order by w.PlaceHolder, w.Position
      ]]>
   </query>

   <query name="GetWidgetTypes">
      <![CDATA[
      from WidgetType wt 
      order by wt.AssemblyName, wt.ClassName
      ]]>
   </query>

   
   <!-- Messages
        ============================= -->
   <query name="GetQueuedEmailMessages">
      <![CDATA[
      from Message m
      where m.Status = 0 and m.AttemptsCount < 3
      order by m.CreatedDate, m.AttemptsCount
      ]]>
   </query>


</hibernate-mapping>